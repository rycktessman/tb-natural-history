matrix(c(rep(1/mult_adhere_ds_novel, 4), mult_adhere_ds_novel),
nrow=3, byrow=T)
adherence_ds_noevl
adherence_ds_novel
0.77*0.9
0.01+0.02+0.05+0.25
1-0.693
0.307/0.33
0.33/0.307
1/0.9
(1-mult_adhere_ds_novel[1]*adherence_ds_soc[5])/sum(adherence_ds_soc[1:4])
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3, byrow=T)
c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel)
(1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]
)
c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel)
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3)
adherence_ds_novel <- adherence_ds_soc *
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3)
adherence_ds_noevl
adherence_ds_novel
adherence_ds_novel <- diag(adherence_ds_soc) *
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3)
adherence_ds_novel <- diag(adherence_ds_soc) %*%
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3)
adherence_ds_novel <-
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) * diag(adherence_ds_soc
cbind(adherence_ds_soc*
c(rep(1/mult_adhere_ds_novel[1], 4), mult_adhere_ds_novel[1]),
ds_chars <- as.matrix(expand.grid("eligibility"=eligibility_ds_novel,
"efficacy"=efficacy_ds_novel,
"duration"=duration_ds_novel,
"adhere_020"=adherence_ds_soc[1]*mult_adhere_ds_novel
))
,
"adhere_2040"=adherence_ds_soc[2]*mult_adhere_ds_novel,
"adhere_4060"=adherence_ds_soc[3]*mult_adhere_ds_novel,
"adhere_6080"=adherence_ds_soc[4]*mult_adhere_ds_novel,
"adhere_80100"=adherence_ds_soc[5]*mult_adhere_ds_novel))
)
adherence_ds_novel <-
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) * diag(adherence_ds_soc)
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3)
adherence_ds_novel <-
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) %*% diag(adherence_ds_soc)
adherence_ds_novel
sum(adherence_ds_soc)
adherence_ds_soc <- c(0.01, 0.02, 0.05, 0.25, 0.67) #need to revise; loosely based on Stagg et al https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7175980/
adherence_dr_soc <- adherence_ds_soc #for now
mult_adhere_ds_novel <- c(0.9, 1, 1.1) #made up for now
mult_adhere_dr_novel <- c(0.9, 1, 1.1) #made up for now
adherence_ds_novel <-
matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) %*% diag(adherence_ds_soc)
adherence_ds_noevl
adherence_ds_novel
colSums(adherence_ds_novel)
rowSums(adherence_ds_novel)
adherence_dr_novel <-
matrix(c(rep((1-mult_adhere_dr_novel*adherence_dr_soc[5])/
sum(adherence_dr_soc[1:4]), 4), mult_adhere_dr_novel),
nrow=3) %*% diag(adherence_dr_soc)
adherence_dr_novel
#mult_adhere = rel % in highest grp. other grps adjust accordingly (relationship across the groups remains the same)
adherence_ds_novel <-
data.frame(matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) %*% diag(adherence_ds_soc))
adherence_ds_novel
names(adherence_ds_novel) <- c("adhere_020", "adhere_2040", "adhere_4060",
"adhere_6080", "adhere_80100")
adherence_ds_novel
ds_chars <- as.matrix(expand.grid("eligibility"=eligibility_ds_novel,
"efficacy"=efficacy_ds_novel,
"duration"=duration_ds_novel,
"adhere_020"=adherence_ds_novel$adhere_020
))
View(ds_chars)
ds_soc <- c(eligibility_ds_soc,
efficacy_ds_soc,
duration_ds_soc,
adherence_ds_soc[1])
ds_Soc
ds_soc
ds_soc <- c(eligibility_ds_soc,
efficacy_ds_soc,
duration_ds_soc,
adherence_ds_soc)
ds_Soc
ds_soc
#merge in adherence for other categories
ds_chars <- left_join(ds_chars, adherence_ds_novel, by="adhere_020")
help(merge)
library(tidyverse)
#merge in adherence for other categories
ds_chars <- left_join(ds_chars, adherence_ds_novel, by="adhere_020")
#construct matrices with all combinations of characteristics
ds_chars <- as.data.frame(expand.grid("eligibility"=eligibility_ds_novel,
"efficacy"=efficacy_ds_novel,
"duration"=duration_ds_novel,
"adhere_020"=adherence_ds_novel$adhere_020
))
View(ds_chars)
#merge in adherence for other categories
ds_chars <- left_join(ds_chars, adherence_ds_novel, by="adhere_020")
View(ds_chars)
adherence_ds_novel
ds_chars <- rbind(ds_soc, ds_chars)
View(ds_chars)
dr_chars <- as.data.frame(expand.grid("eligibility"=eligibility_dr_novel,
"efficacy"=efficacy_dr_novel,
"duration"=duration_dr_novel,
"adhere_020"=adherence_dr_novel$adhere_020
))
dr_chars <- left_join(dr_chars, adherence_dr_novel, by="adhere_020")
dr_soc <- c(eligibility_dr_soc,
efficacy_dr_soc,
duration_dr_soc,
adherence_dr_soc)
dr_chars <- rbind(dr_soc, dr_chars)
adherence_dr_novel <-
data.frame(matrix(c(rep((1-mult_adhere_dr_novel*adherence_dr_soc[5])/
sum(adherence_dr_soc[1:4]), 4), mult_adhere_dr_novel),
nrow=3) %*% diag(adherence_dr_soc))
names(adherence_dr_novel) <- names(adherence_ds_novel)
dr_chars <- as.data.frame(expand.grid("eligibility"=eligibility_dr_novel,
"efficacy"=efficacy_dr_novel,
"duration"=duration_dr_novel,
"adhere_020"=adherence_dr_novel$adhere_020
))
dr_chars <- left_join(dr_chars, adherence_dr_novel, by="adhere_020")
dr_soc <- c(eligibility_dr_soc,
efficacy_dr_soc,
duration_dr_soc,
adherence_dr_soc)
dr_chars <- rbind(dr_soc, dr_chars)
View(dr_chars)
#FORGIVENESS (relationship between efficacy achieved and adherence)
hr_forgive_ds <- 5.9/((1*913+2.4*230)/(913+230)) #from Fig2b of Imperial et al
hr_forgive_ds
releff_forgive_ds_soc <- (hr_forgive_ds_soc*(1-efficacy_ds_soc))/efficacy_ds_soc
#FORGIVENESS (relationship between efficacy achieved and adherence)
hr_forgive_ds_soc <- 5.9/((1*913+2.4*230)/(913+230)) #from Fig2b of Imperial et al
releff_forgive_ds_soc <- (hr_forgive_ds_soc*(1-efficacy_ds_soc))/efficacy_ds_soc
releff_forgive_ds_soc
releff_forgive_ds_soc <- (1 - hr_forgive_ds_soc*(1-efficacy_ds_soc))/efficacy_ds_soc
releff_forgive_ds_soc
forgiveness_ds_soc <- c(0, releff_forgive_ds_soc, 1)
forgiveness_ds_soc
6/7
#define regimen characteristics for the 2022 TRPs
#return a list called regimens
#contains 2 elements: 1=DS, 2=DR
#regimens[DS] is an array with rows corresponding to regimens and columns corresponding to chars
#same for regimens[DR]
#the first is the SOC
#ELIGIBILITY (% all patients eligible for regimen)
eligibility_ds_soc <- 1
eligibility_dr_soc <- 1
eligibility_ds_novel <- c(0.9, 0.95, 1) #made up for now
eligibility_dr_novel <- c(0.9, 0.95, 1) #made up for now
#EFFICACY (% cured given 100% adherence fo 100% duration)
efficacy_ds_soc <- 0.95
efficacy_dr_soc <- 0.9
efficacy_ds_novel <- c(0.95, 0.97, 0.99) #made up for now
efficacy_dr_novel <- c(0.9, 0.95, 0.97) #made up for now
#DURATION: optimal regimen duration (in months)
duration_ds_soc <- 6 #duration in months
duration_dr_soc <- 9
duration_ds_novel <- c(2, 4, 6) #made up for now
duration_dr_novel <- c(6, 9, 12) #made up for now
#EASE OF ADHERENCE: % patients by adherence group (0-20%, 20-40%, 40-60%, 60-80%, 80-100%)
adherence_ds_soc <- c(0.01, 0.02, 0.05, 0.25, 0.67) #need to revise; loosely based on Stagg et al https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7175980/
adherence_dr_soc <- adherence_ds_soc #for now
mult_adhere_ds_novel <- c(0.9, 1, 1.1) #made up for now
mult_adhere_dr_novel <- c(0.9, 1, 1.1) #made up for now
#mult_adhere = rel % in highest grp. other grps adjust accordingly (relationship across the groups remains the same)
adherence_ds_novel <-
data.frame(matrix(c(rep((1-mult_adhere_ds_novel*adherence_ds_soc[5])/
sum(adherence_ds_soc[1:4]), 4), mult_adhere_ds_novel),
nrow=3) %*% diag(adherence_ds_soc))
names(adherence_ds_novel) <- c("adhere_020", "adhere_2040", "adhere_4060",
"adhere_6080", "adhere_80100")
adherence_dr_novel <-
data.frame(matrix(c(rep((1-mult_adhere_dr_novel*adherence_dr_soc[5])/
sum(adherence_dr_soc[1:4]), 4), mult_adhere_dr_novel),
nrow=3) %*% diag(adherence_dr_soc))
names(adherence_dr_novel) <- names(adherence_ds_novel)
#FORGIVENESS (relationship between efficacy achieved and adherence)
hr_forgive_ds_soc <- 5.9/((1*913+2.4*230)/(913+230)) #from Fig2b of Imperial et al
forgive_ds_soc <- (1 - hr_forgive_ds_soc*(1-efficacy_ds_soc))/efficacy_ds_soc #convert HR to relative efficacy
forgive_ds_novel <- c(0.7, forgiveness_ds_soc, 0.9)
#forgive relative efficacy of those missing > 1 dose per week
#FOR NOW interpret this as those taken >0 doses but not in the highest adherence category
#construct matrices with all combinations of characteristics
ds_chars <- as.data.frame(expand.grid("eligibility"=eligibility_ds_novel,
"efficacy"=efficacy_ds_novel,
"duration"=duration_ds_novel,
"forgive"=forgive_ds_novel,
"adhere_020"=adherence_ds_novel$adhere_020
))
#merge in adherence for other categories
ds_chars <- left_join(ds_chars, adherence_ds_novel, by="adhere_020")
#add SOC as first row
ds_soc <- c(eligibility_ds_soc,
efficacy_ds_soc,
duration_ds_soc,
forgive_ds_soc,
adherence_ds_soc)
ds_chars <- rbind(ds_soc, ds_chars)
View(ds_chars)
names(ds_chars)
#model "adherence" (varies by regimen)
#adherence-efficacy relationship determined by "forgiveness" (varies by regimen)
#first calculate % by # doses taken per week
adherence_soc <- ds_chars[1, contains("adhere")]
#model "adherence" (varies by regimen)
#adherence-efficacy relationship determined by "forgiveness" (varies by regimen)
#first calculate % by # doses taken per week
adherence_soc <- ds_chars[1, grepl("adhere", names(ds_chars))]
adherence_soc
adherence_novel <- ds_chars[regimen_num, grepl("adhere", names(ds_chars))]
adherence_novel
cured
cbind(adherence_soc, adherence_novel)
ds_chars[1, grepl("adhere", names(ds_chars))]
ds_chars[[1, grepl("adhere", names(ds_chars))]]
as.vector(ds_chars[1, grepl("adhere", names(ds_chars))])
str(ds_chars[1, grepl("adhere", names(ds_chars))])
adherence <- ds_chars[, grepl("adhere", names(ds_chars))]
adherence
adherence[1,]
adherence[regimen_num]
adherence[regimen_num,]
#model "adherence" (varies by regimen)
#adherence-efficacy relationship determined by "forgiveness" (varies by regimen)
#first calculate % by # doses taken per week
adherence_soc <- adherence[1,]
adherence_novel <- adherence[regimen_num, ]
cbind(adherence_soc, adherence_novel)
adherence[[1]]
adherence[regimen_num,]
adherence[[regimen_num,]]
#model "adherence" (varies by regimen)
#adherence-efficacy relationship determined by "forgiveness" (varies by regimen)
#first calculate % by # doses taken per week
adherence_soc <- as.numeric(adherence[1, ])
adherence_soc
adherence_soc <- as.numeric(adherence[1, ])
adherence_novel <- as.numeric(adherence[regimen_num, ])
cbind(adherence_soc, adherence_novel)
test <- cured %*% cbind(adherence_soc, adherence_novel)
test <- cbind(adherence_soc, adherence_novel) %*% diag(cured)
test
rowSums(test)
colSums(test)
cured
test <- cbind("SOC"=adherence_soc, "novel"=adherence_novel) %*% diag(cured)
test
forgiveness
forgive <- ds_chars$forgive
forgive
hr_forgive_ds_soc <- 5.9/((1*913+2.4*230)/(913+230)) #from Fig2b of Imperial et al
forgive_ds_soc <- (1 - hr_forgive_ds_soc*(1-efficacy_ds_soc))/efficacy_ds_soc #convert HR to relative efficacy
forgive_ds_novel <- c(0.7, forgiveness_ds_soc, 0.9)
forgive_ds_noevl
forgive_ds_novel
forgive_ds_novel <- c(0.7, forgive_ds_soc, 0.9)
forgive_ds_novel
ds_chars <- as.data.frame(expand.grid("eligibility"=eligibility_ds_novel,
"efficacy"=efficacy_ds_novel,
"duration"=duration_ds_novel,
"forgive"=forgive_ds_novel,
"adhere_020"=adherence_ds_novel$adhere_020
))
#merge in adherence for other categories
ds_chars <- left_join(ds_chars, adherence_ds_novel, by="adhere_020")
#add SOC as first row
ds_soc <- c(eligibility_ds_soc,
efficacy_ds_soc,
duration_ds_soc,
forgive_ds_soc,
adherence_ds_soc)
ds_chars <- rbind(ds_soc, ds_chars)
unique(ds_chars$forgive)
forgive <- ds_chars$forgive
cbind(c(rep(forgive[1], 4), 1),
c(rep(forgive[regimen_num], 4), 1))
cured
cured <- cbind(adherence_soc, adherence_novel) %*% diag(cured)
cured
cured*cbind(c(rep(forgive[1], 4), 1),
c(rep(forgive[regimen_num], 4), 1))
#next multiply by forgiveness to calculate % cured based on relative efficacy
cured <- cured*cbind(c(rep(forgive[1], 4), 1),
c(rep(forgive[regimen_num], 4), 1))
sum(cured)
#sum over adherence categories
cured <- colSums(cured)
cured
sum(cured)
#run this script after running IMIS_combine
library(psych)
library(ppcor) #for partial rank correlations
library(tidyverse)
library(data.table)
library(ggpubr)
library(cowplot)
library(scales)
library(ggridges)
setwd("~/GitHub/tb-natural-history")
path_out <- "output/main/"
source("code/calib_functions.R")
load("data/params_all.Rda")
RR_free <- 1 #4 free RR parameters in this version
spont_progress <- 0 #whether those who have spontaneously resolved can progress back to smear- symptom- TB
spont_prog <- 0.15 #what probability to use if spont_progress is 1
smear_hist_calib <- 0 #whether to include historical targets on bacillary status over time
deaths_targets <- "base" #"base", or "ihme" or use ihme targets
no_10yr_hist <- 0 #whether to include 10 year historical survival as calibration targets
smear_notif_override <- NA #NA, or an alt estimate +/- 10% (uniformly distributed)
RR_regress_recip <- 0 #if 1, fit one over the regression relative risk(s) instead of the regression relative risk(s)
#param names and labels for graphing
param_names <- c("Smear Progression", "Symptom Progression",
"Smear Regression", "Symptom Regression",
"Progression Rel. Risk", "Regression Rel. Risk",
"Treatment (Smear-)", "Treatment (Smear+)",
"TB Mortality (Smear-)", "TB Mortality (Smear+)",
"Spontaneous Resolution")
names(param_names) <- c("p_m", "p_s",
"r_m", "r_s",
"a_p_m", "a_r_m",
"c_tx", "c_tx_m",
"m_tb", "m_tb_m",
"c_sp")
#colors for countries
countries <- c("Philippines",
"Vietnam",
"Bangladesh",
"Nepal",
"Cambodia"
)
colors_c <- c(hue_pal()(5), "darkgrey")
names(colors_c) <- c(countries, "Prior")
#load targets
target_means <- list()
target_lbs <- list()
target_ubs <- list()
if(deaths_targets=="ihme") {
load("data/mort_to_prev_ihme.Rda")
}
for(i in countries) {
print(i)
load(paste0("data/targets_", tolower(i), ".Rda"))
target_means[[i]] <- targets_all
target_lbs[[i]] <- targets_all_lb
target_ubs[[i]] <- targets_all_ub
if(deaths_targets=="ihme") {
target_means[[i]][["deaths_tb_ihme"]] <- mort_to_prev_mu[[i]]/100
target_lbs[[i]][["deaths_tb_ihme"]] <- mort_to_prev_lb[[i]]/100
target_ubs[[i]][["deaths_tb_ihme"]] <- mort_to_prev_ub[[i]]/100
}
}
target_means <- bind_rows(target_means, .id="country")
target_means <- target_means %>%
mutate(country=factor(country, levels=sort(countries, decreasing=T)), country_num=as.numeric(country),
country_num_end=country_num+1)
target_means <- target_means %>%
mutate(pnr=if_else(country %in% c("Philippines", "Cambodia"), pnr_m_all, pnr_all))
target_lbs <- bind_rows(target_lbs, .id="country")
target_lbs <- target_lbs %>%
mutate(country=factor(country, levels=sort(countries, decreasing=T)), country_num=as.numeric(country),
country_num_end=country_num+1)
target_lbs <- target_lbs %>%
mutate(pnr=if_else(country %in% c("Philippines", "Cambodia"), pnr_m_all, pnr_all))
target_ubs <- bind_rows(target_ubs, .id="country")
target_ubs <- target_ubs %>%
mutate(country=factor(country, levels=sort(countries, decreasing=T)), country_num=as.numeric(country),
country_num_end=country_num+1)
target_ubs <- target_ubs %>%
mutate(pnr=if_else(country %in% c("Philippines", "Cambodia"), pnr_m_all, pnr_all))
#target names
names_prev <- pull_targets("prev", targets_all, "Philippines")[[2]]
names_prev[["pnr_m_all"]] <- "Prevalence:Notifications"
names(names_prev)[names_prev=="Prevalence:Notifications"] <- "pnr"
names_hist_pos <- pull_targets("hist_pos", targets_all, country)[[2]]
names_hist_neg <- pull_targets("hist_neg", targets_all, country)[[2]]
names <- c(names_prev, names_hist_pos, names_hist_neg)
#multipliers when graphing each target
mults <- c(100, 100, 100, 100, 1, 1000, 100, 100, 100, 100, 100)
names(mults) <- names(names)
#options for sensitivity analyses
scenario_lab <- "_base"
if(RR_free==1) {
priors_prev_lb <- c(priors_prev_lb, "a_p_s"=priors_prev_lb$a_p_m, "a_r_s"=priors_prev_lb$a_r_m)
priors_prev_ub <- c(priors_prev_ub, "a_p_s"=priors_prev_ub$a_p_m, "a_r_s"=priors_prev_ub$a_r_m)
names_params_calib <- c(names_params_calib, "a_p_s"="Progression Multiplier (symptoms)",
"a_r_s"="Regression Multiplier (symptoms)")
names_params_calib[["a_r_m"]] <- "Regression Multiplier (smear)"
names_params_calib[["a_p_m"]] <- "Progression Multiplier (smear)"
param_names <- c(param_names, "a_p_s"="Progression Rel. Risk (symptom)",
"a_r_s"="Regression Rel. Risk (symptom)")
param_names[["a_r_m"]] <- "Regression Rel. Risk (smear)"
param_names[["a_p_m"]] <- "Progression Rel. Risk (smear)"
}
if(RR_free==0) {
scenario_lab <- "_rrconstrain"
}
if(spont_progress==1) {
params_fixed_prev[["p_c"]] <- 1-exp(log(1-spont_prog)/12) #monthly probability corresponding to annual probability of 3%
params_fixed_hist[["p_c"]] <- params_fixed_prev[["p_c"]]
scenario_lab <- "_spontprog"
}
if(smear_hist_calib==1) {
#sinding-larsen
targets_all[["tb_smear_4yr_1"]] <- 61
targets_all[["alive_4yr_1"]] <- 366
#braeuning neisen
targets_all[["tb_smear_4yr_2"]] <- 84
targets_all[["alive_4yr_2"]] <- 166
#griep
targets_all[["tb_smear_4yr_3"]] <- 14
targets_all[["alive_4yr_3"]] <- 57
names_hist_pos <- c(names_hist_pos, "tb_smear_4yr"="Still Smear+ at 4 Yrs (% Alive)")
names <- c(names_prev, names_hist_pos, names_hist_neg)
mults <- c(mults, 100)
names(mults) <- names(names)
scenario_lab <- "_smearhist"
target_means[["tb_smear_4yr"]] <- 159/589
target_lbs[["tb_smear_4yr"]] <- qbeta(0.025, 159, 589-159)
target_ubs[["tb_smear_4yr"]] <- qbeta(0.975, 159, 589-159)
}
if(deaths_targets=="ihme") {
scenario_lab <- "_ihmedeaths"
}
if(no_10yr_hist==1) {
scenario_lab <- "_no10"
}
if(!is.na(smear_notif_override)) {
scenario_lab <- paste0("_smearnotif", as.character(round(smear_notif_override*100)))
}
if(RR_regress_recip==1) {
scenario_lab <- "_recipprior"
}
#read files in (priors are the same across countries)
out_prior <- read.csv(paste0(path_out, "out_priors_combined.csv")) %>% mutate(type="Prior", country="Prior")
if(scenario_lab=="_rrconstrain") {
out_prior <- out_prior %>% mutate(a_r_s=a_r_m,
a_p_s=a_p_m)
}
if(scenario_lab=="_recipprior") {
out_prior <- read.csv(paste0(path_out, "out_priors_combined_recipprior.csv")) %>%
mutate(type="Prior", country="Prior")
out_prior <- out_prior %>% mutate(a_r_m=1/a_r_m_recip,
a_r_s=1/a_r_s_recip)
}
#posteriors and performance for all countries
out_post_all <- list()
stats_rounds_all <- list()
ess_all <- list()
ess_each <- list()
for(i in countries) {
path_in <- paste0("output/", tolower(i), scenario_lab, "/")
print(i)
out_post <- read.csv(paste0(path_in, "out_IMIS_combined", ".csv")) %>%
mutate(type="Posterior", country=i)
stats_rounds <- read.csv(paste0(path_in, "stats_rounds_combined", ".csv")) %>%
mutate(country=i)
ess <- read.csv(paste0(path_in, "ess_chains.csv"))
out_post_all[[i]] <- out_post
stats_rounds_all[[i]] <- stats_rounds
ess_each[[i]] <- ess
ess_all[[i]] <- sum(ess)
}
out_post_all <- bind_rows(out_post_all)
stats_rounds_all <- bind_rows(stats_rounds_all)
ess_all <- bind_rows(ess_all)
ess_each <- bind_cols(ess_each)
names(ess_each) <- countries
cor(out_post_all$a_p_m, out_post_all$a_r_m)
cor(out_post_all$a_p_s, out_post_all$a_r_s)
cor(out_post_all$a_p_m, out_post_all$a_p_s)
cor(out_post_all$a_r_m, out_post_all$a_r_s)
pcor(out_post_all %>% select(a_p_m, a_p_s, a_r_m, a_r_s))
pcor(out_post_all %>% select(p_s, r_s, a_p_s, a_r_s))
pcor(out_post_all %>% select(p_s, r_s, a_p_s, a_r_s))
cor(out_post_all$p_s, out_post_all$a_p_s)
cor(out_post_all$r_s, out_post_all$a_r_s)
pcor(out_post_all %>% select(p_s, r_s, a_p_s, a_r_s))
pcor(out_post_all %>% select(p_m, r_m, a_p_m, a_r_m))
